{
  "contractName": "ERC721Mintable",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526100367f01ffc9a70000000000000000000000000000000000000000000000000000000064010000000061007f810204565b6100687f80ac58cd0000000000000000000000000000000000000000000000000000000064010000000061007f810204565b61007a336401000000006100eb810204565b6101c8565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156100ae57600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b610103600582640100000000610cb161013a82021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a038116151561014f57600080fd5b6101628282640100000000610191810204565b1561016c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a03821615156101a857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b610d7f806101d76000396000f3fe6080604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a781146100d4578063081812fc14610131578063095ea7b31461017757806323b872dd146101b257806340c10f19146101f557806342842e0e1461022e5780636352211e1461027157806370a082311461029b578063983b2d56146102e05780639865027514610313578063a22cb46514610328578063aa271e1a14610363578063b88d4fde14610396578063e985e9c514610469575b600080fd5b3480156100e057600080fd5b5061011d600480360360208110156100f757600080fd5b50357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166104a4565b604080519115158252519081900360200190f35b34801561013d57600080fd5b5061015b6004803603602081101561015457600080fd5b50356104d8565b60408051600160a060020a039092168252519081900360200190f35b34801561018357600080fd5b506101b06004803603604081101561019a57600080fd5b50600160a060020a03813516906020013561050a565b005b3480156101be57600080fd5b506101b0600480360360608110156101d557600080fd5b50600160a060020a038135811691602081013590911690604001356105c0565b34801561020157600080fd5b5061011d6004803603604081101561021857600080fd5b50600160a060020a0381351690602001356105e5565b34801561023a57600080fd5b506101b06004803603606081101561025157600080fd5b50600160a060020a0381358116916020810135909116906040013561060e565b34801561027d57600080fd5b5061015b6004803603602081101561029457600080fd5b503561062a565b3480156102a757600080fd5b506102ce600480360360208110156102be57600080fd5b5035600160a060020a0316610654565b60408051918252519081900360200190f35b3480156102ec57600080fd5b506101b06004803603602081101561030357600080fd5b5035600160a060020a0316610687565b34801561031f57600080fd5b506101b06106a7565b34801561033457600080fd5b506101b06004803603604081101561034b57600080fd5b50600160a060020a03813516906020013515156106b2565b34801561036f57600080fd5b5061011d6004803603602081101561038657600080fd5b5035600160a060020a0316610736565b3480156103a257600080fd5b506101b0600480360360808110156103b957600080fd5b600160a060020a038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103f457600080fd5b82018360208201111561040657600080fd5b8035906020019184600183028401116401000000008311171561042857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610749945050505050565b34801561047557600080fd5b5061011d6004803603604081101561048c57600080fd5b50600160a060020a0381358116916020013516610771565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b60006104e38261079f565b15156104ee57600080fd5b50600090815260026020526040902054600160a060020a031690565b60006105158261062a565b9050600160a060020a03838116908216141561053057600080fd5b33600160a060020a038216148061054c575061054c8133610771565b151561055757600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6105ca33826107bc565b15156105d557600080fd5b6105e083838361081b565b505050565b60006105f033610736565b15156105fb57600080fd5b6106058383610937565b50600192915050565b6105e08383836020604051908101604052806000815250610749565b600081815260016020526040812054600160a060020a031680151561064e57600080fd5b92915050565b6000600160a060020a038216151561066b57600080fd5b50600160a060020a031660009081526003602052604090205490565b61069033610736565b151561069b57600080fd5b6106a4816109f8565b50565b6106b033610a40565b565b600160a060020a0382163314156106c857600080fd5b336000818152600460209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b600061064e60058363ffffffff610a8816565b6107548484846105c0565b61076084848484610abf565b151561076b57600080fd5b50505050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600090815260016020526040902054600160a060020a0316151590565b6000806107c88361062a565b905080600160a060020a031684600160a060020a03161480610803575083600160a060020a03166107f8846104d8565b600160a060020a0316145b8061081357506108138185610771565b949350505050565b82600160a060020a031661082e8261062a565b600160a060020a03161461084157600080fd5b600160a060020a038216151561085657600080fd5b61085f81610c3b565b600160a060020a03831660009081526003602052604090205461088990600163ffffffff610c8316565b600160a060020a0380851660009081526003602052604080822093909355908416815220546108bf90600163ffffffff610c9816565b600160a060020a0380841660008181526003602090815260408083209590955585825260019052838120805473ffffffffffffffffffffffffffffffffffffffff1916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600160a060020a038216151561094c57600080fd5b6109558161079f565b1561095f57600080fd5b6000818152600160208181526040808420805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03881690811790915584526003909152909120546109ad91610c98565b600160a060020a0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610a0960058263ffffffff610cb116565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a5160058263ffffffff610cff16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610a9f57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b6000610ad384600160a060020a0316610d4b565b1515610ae157506001610813565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610b74578181015183820152602001610b5c565b50505050905090810190601f168015610ba15780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610bc357600080fd5b505af1158015610bd7573d6000803e3d6000fd5b505050506040513d6020811015610bed57600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b600081815260026020526040902054600160a060020a0316156106a4576000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b600082821115610c9257600080fd5b50900390565b600082820183811015610caa57600080fd5b9392505050565b600160a060020a0381161515610cc657600080fd5b610cd08282610a88565b15610cda57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610d1457600080fd5b610d1e8282610a88565b1515610d2957600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b6000903b119056fea165627a7a72305820567ea1f9c70452bb3e31026598e61660e0079b8e2030b4d704c0f25d93a58ce90029",
  "deployedBytecode": "0x6080604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a781146100d4578063081812fc14610131578063095ea7b31461017757806323b872dd146101b257806340c10f19146101f557806342842e0e1461022e5780636352211e1461027157806370a082311461029b578063983b2d56146102e05780639865027514610313578063a22cb46514610328578063aa271e1a14610363578063b88d4fde14610396578063e985e9c514610469575b600080fd5b3480156100e057600080fd5b5061011d600480360360208110156100f757600080fd5b50357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166104a4565b604080519115158252519081900360200190f35b34801561013d57600080fd5b5061015b6004803603602081101561015457600080fd5b50356104d8565b60408051600160a060020a039092168252519081900360200190f35b34801561018357600080fd5b506101b06004803603604081101561019a57600080fd5b50600160a060020a03813516906020013561050a565b005b3480156101be57600080fd5b506101b0600480360360608110156101d557600080fd5b50600160a060020a038135811691602081013590911690604001356105c0565b34801561020157600080fd5b5061011d6004803603604081101561021857600080fd5b50600160a060020a0381351690602001356105e5565b34801561023a57600080fd5b506101b06004803603606081101561025157600080fd5b50600160a060020a0381358116916020810135909116906040013561060e565b34801561027d57600080fd5b5061015b6004803603602081101561029457600080fd5b503561062a565b3480156102a757600080fd5b506102ce600480360360208110156102be57600080fd5b5035600160a060020a0316610654565b60408051918252519081900360200190f35b3480156102ec57600080fd5b506101b06004803603602081101561030357600080fd5b5035600160a060020a0316610687565b34801561031f57600080fd5b506101b06106a7565b34801561033457600080fd5b506101b06004803603604081101561034b57600080fd5b50600160a060020a03813516906020013515156106b2565b34801561036f57600080fd5b5061011d6004803603602081101561038657600080fd5b5035600160a060020a0316610736565b3480156103a257600080fd5b506101b0600480360360808110156103b957600080fd5b600160a060020a038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103f457600080fd5b82018360208201111561040657600080fd5b8035906020019184600183028401116401000000008311171561042857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610749945050505050565b34801561047557600080fd5b5061011d6004803603604081101561048c57600080fd5b50600160a060020a0381358116916020013516610771565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b60006104e38261079f565b15156104ee57600080fd5b50600090815260026020526040902054600160a060020a031690565b60006105158261062a565b9050600160a060020a03838116908216141561053057600080fd5b33600160a060020a038216148061054c575061054c8133610771565b151561055757600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6105ca33826107bc565b15156105d557600080fd5b6105e083838361081b565b505050565b60006105f033610736565b15156105fb57600080fd5b6106058383610937565b50600192915050565b6105e08383836020604051908101604052806000815250610749565b600081815260016020526040812054600160a060020a031680151561064e57600080fd5b92915050565b6000600160a060020a038216151561066b57600080fd5b50600160a060020a031660009081526003602052604090205490565b61069033610736565b151561069b57600080fd5b6106a4816109f8565b50565b6106b033610a40565b565b600160a060020a0382163314156106c857600080fd5b336000818152600460209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b600061064e60058363ffffffff610a8816565b6107548484846105c0565b61076084848484610abf565b151561076b57600080fd5b50505050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600090815260016020526040902054600160a060020a0316151590565b6000806107c88361062a565b905080600160a060020a031684600160a060020a03161480610803575083600160a060020a03166107f8846104d8565b600160a060020a0316145b8061081357506108138185610771565b949350505050565b82600160a060020a031661082e8261062a565b600160a060020a03161461084157600080fd5b600160a060020a038216151561085657600080fd5b61085f81610c3b565b600160a060020a03831660009081526003602052604090205461088990600163ffffffff610c8316565b600160a060020a0380851660009081526003602052604080822093909355908416815220546108bf90600163ffffffff610c9816565b600160a060020a0380841660008181526003602090815260408083209590955585825260019052838120805473ffffffffffffffffffffffffffffffffffffffff1916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600160a060020a038216151561094c57600080fd5b6109558161079f565b1561095f57600080fd5b6000818152600160208181526040808420805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03881690811790915584526003909152909120546109ad91610c98565b600160a060020a0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610a0960058263ffffffff610cb116565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a5160058263ffffffff610cff16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610a9f57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b6000610ad384600160a060020a0316610d4b565b1515610ae157506001610813565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610b74578181015183820152602001610b5c565b50505050905090810190601f168015610ba15780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610bc357600080fd5b505af1158015610bd7573d6000803e3d6000fd5b505050506040513d6020811015610bed57600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b600081815260026020526040902054600160a060020a0316156106a4576000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b600082821115610c9257600080fd5b50900390565b600082820183811015610caa57600080fd5b9392505050565b600160a060020a0381161515610cc657600080fd5b610cd08282610a88565b15610cda57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610d1457600080fd5b610d1e8282610a88565b1515610d2957600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b6000903b119056fea165627a7a72305820567ea1f9c70452bb3e31026598e61660e0079b8e2030b4d704c0f25d93a58ce90029",
  "sourceMap": "155:421:12:-;;;640:40:5;659:20;640:18;;;;:40;:::i;:::-;1906::8;1925:20;1906:18;;;;:40;:::i;:::-;275:22:3;286:10;275;;;;:22;:::i;:::-;155:421:12;;990:158:5;1065:25;;;;;;1057:34;;;;;;1101:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1101:40:5;1137:4;1101:40;;;990:158::o;685:119:3:-;741:21;:8;754:7;741:12;;;;;;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:3;;;;;;;;685:119;:::o;259:181:2:-;-1:-1:-1;;;;;335:21:2;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:2;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:2;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:2;:11;:20;;;;;;;;;;;;;;;786:162::o;155:421:12:-;;;;;;;",
  "deployedSourceMap": "155:421:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:133:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;778:133:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;778:133:5;-1:-1:-1;;778:133:5;;;;;;;;;;;;;;;;;;;;;3705:151:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3705:151:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3705:151:8;;;;;;;-1:-1:-1;;;;;3705:151:8;;;;;;;;;;;;;;3128:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3128:292:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3128:292:8;;;;;;;;;;;5260:180;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5260:180:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5260:180:8;;;;;;;;;;;;;;;;;;442:132:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;442:132:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;442:132:12;;;;;;;;;6079::8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6079:132:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6079:132:8;;;;;;;;;;;;;;;;;;2530:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2530:177:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2530:177:8;;;2156:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2156:150:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2156:150:8;-1:-1:-1;;;;;2156:150:8;;;;;;;;;;;;;;;;;;;508:90:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:3;-1:-1:-1;;;;;508:90:3;;;604:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:3;;;;4148:213:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4148:213:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4148:213:8;;;;;;;;;;;395:107:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:3;-1:-1:-1;;;;;395:107:3;;;6916:211:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6916:211:8;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6916:211:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6916:211:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6916:211:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6916:211:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6916:211:8;;-1:-1:-1;6916:211:8;;-1:-1:-1;;;;;6916:211:8;4682:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4682:145:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4682:145:8;;;;;;;;;;;778:133:5;-1:-1:-1;;871:33:5;848:4;871:33;;;;;;;;;;;;;;778:133::o;3705:151:8:-;3764:7;3791:16;3799:7;3791;:16::i;:::-;3783:25;;;;;;;;-1:-1:-1;3825:24:8;;;;:15;:24;;;;;;-1:-1:-1;;;;;3825:24:8;;3705:151::o;3128:292::-;3191:13;3207:16;3215:7;3207;:16::i;:::-;3191:32;-1:-1:-1;;;;;;3241:11:8;;;;;;;;3233:20;;;;;;3271:10;-1:-1:-1;;;;;3271:19:8;;;;:58;;;3294:35;3311:5;3318:10;3294:16;:35::i;:::-;3263:67;;;;;;;;3341:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;3341:29:8;-1:-1:-1;;;;;3341:29:8;;;;;;;;;3385:28;;3341:24;;3385:28;;;;;;;3128:292;;;:::o;5260:180::-;5350:39;5369:10;5381:7;5350:18;:39::i;:::-;5342:48;;;;;;;;5401:32;5415:4;5421:2;5425:7;5401:13;:32::i;:::-;5260:180;;;:::o;442:132:12:-;512:4;350:20:3;359:10;350:8;:20::i;:::-;342:29;;;;;;;;528:18:12;534:2;538:7;528:5;:18::i;:::-;-1:-1:-1;563:4:12;442:132;;;;:::o;6079::8:-;6165:39;6182:4;6188:2;6192:7;6165:39;;;;;;;;;;;;;:16;:39::i;2530:177::-;2585:7;2620:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2620:20:8;2658:19;;;2650:28;;;;;;2695:5;2530:177;-1:-1:-1;;2530:177:8:o;2156:150::-;2211:7;-1:-1:-1;;;;;2238:19:8;;;;2230:28;;;;;;-1:-1:-1;;;;;;2275:24:8;;;;;:17;:24;;;;;;;2156:150::o;508:90:3:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;4148:213:8:-;-1:-1:-1;;;;;4227:16:8;;4233:10;4227:16;;4219:25;;;;;;4273:10;4254:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4254:34:8;;;;;;;;;;;;:45;;-1:-1:-1;;4254:45:8;;;;;;;;;;4314:40;;;;;;;4254:34;;4273:10;4314:40;;;;;;;;;;;4148:213;;:::o;395:107:3:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;6916:211:8:-;7022:31;7035:4;7041:2;7045:7;7022:12;:31::i;:::-;7071:48;7094:4;7100:2;7104:7;7113:5;7071:22;:48::i;:::-;7063:57;;;;;;;;6916:211;;;;:::o;4682:145::-;-1:-1:-1;;;;;4785:25:8;;;4762:4;4785:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4682:145::o;7316:152::-;7373:4;7405:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7405:20:8;7442:19;;;7316:152::o;7831:246::-;7916:4;7932:13;7948:16;7956:7;7948;:16::i;:::-;7932:32;;7993:5;-1:-1:-1;;;;;7982:16:8;:7;-1:-1:-1;;;;;7982:16:8;;:51;;;;8026:7;-1:-1:-1;;;;;8002:31:8;:20;8014:7;8002:11;:20::i;:::-;-1:-1:-1;;;;;8002:31:8;;7982:51;:87;;;;8037:32;8054:5;8061:7;8037:16;:32::i;:::-;7974:96;7831:246;-1:-1:-1;;;;7831:246:8:o;9819:402::-;9932:4;-1:-1:-1;;;;;9912:24:8;:16;9920:7;9912;:16::i;:::-;-1:-1:-1;;;;;9912:24:8;;9904:33;;;;;;-1:-1:-1;;;;;9955:16:8;;;;9947:25;;;;;;9983:23;9998:7;9983:14;:23::i;:::-;-1:-1:-1;;;;;10043:23:8;;;;;;:17;:23;;;;;;:30;;10071:1;10043:30;:27;:30;:::i;:::-;-1:-1:-1;;;;;10017:23:8;;;;;;;:17;:23;;;;;;:56;;;;10107:21;;;;;;;:28;;10133:1;10107:28;:25;:28;:::i;:::-;-1:-1:-1;;;;;10083:21:8;;;;;;;:17;:21;;;;;;;;:52;;;;10146:20;;;:11;:20;;;;;:25;;-1:-1:-1;;10146:25:8;;;;;10187:27;;10158:7;;10083:21;;10187:27;;;;;;9819:402;;;:::o;8320:278::-;-1:-1:-1;;;;;8391:16:8;;;;8383:25;;;;;;8427:16;8435:7;8427;:16::i;:::-;8426:17;8418:26;;;;;;8455:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;8455:25:8;-1:-1:-1;;;;;8455:25:8;;;;;;;;8514:21;;:17;:21;;;;;;;:28;;:25;:28::i;:::-;-1:-1:-1;;;;;8490:21:8;;;;;;:17;:21;;;;;;:52;;;;8558:33;;8583:7;;8490:21;8558:33;;8490:21;;8558:33;8320:278;;:::o;685:119:3:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:3;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:3;;;;;;;;810:127;:::o;786:162:2:-;858:4;-1:-1:-1;;;;;882:21:2;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:2;:11;:20;;;;;;;;;;;;;;;786:162::o;10744:347:8:-;10865:4;10890:15;:2;-1:-1:-1;;;;;10890:13:8;;:15::i;:::-;10889:16;10885:58;;;-1:-1:-1;10928:4:8;10921:11;;10885:58;10969:70;;;;;11006:10;10969:70;;;;;;-1:-1:-1;;;;;10969:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;10953:13;;10969:36;;;;;;11006:10;;11018:4;;11024:7;;11033:5;;10969:70;;;;;;;;;;;10953:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10969:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10969:70:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10969:70:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10969:70:8;-1:-1:-1;;11057:26:8;11067:16;11057:26;;-1:-1:-1;;10744:347:8;;;;;;:::o;11252:171::-;11351:1;11315:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11315:24:8;:38;11311:106;;11404:1;11369:24;;;:15;:24;;;;;:37;;-1:-1:-1;;11369:37:8;;;11252:171::o;1205:145:7:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:7;;;1205:145::o;1431:::-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:7:o;259:181:2:-;-1:-1:-1;;;;;335:21:2;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:2;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:2;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:2;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:2;;;514:184::o;463:616:17:-;523:4;1026:20;;1064:8;;463:616::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC721.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n/**\n * @title ERC721Mintable\n * @dev ERC721 minting logic\n */\ncontract ERC721Mintable is ERC721, MinterRole {\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param tokenId The token id to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 tokenId) public onlyMinter returns (bool) {\n        _mint(to, tokenId);\n        return true;\n    }\n}\n",
  "sourcePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
  "ast": {
    "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
    "exportedSymbols": {
      "ERC721Mintable": [
        2055
      ]
    },
    "id": 2056,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2029,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2030,
        "nodeType": "ImportDirective",
        "scope": 2056,
        "sourceUnit": 1542,
        "src": "25:22:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 2031,
        "nodeType": "ImportDirective",
        "scope": 2056,
        "sourceUnit": 713,
        "src": "48:43:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2032,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1541,
              "src": "182:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1541",
                "typeString": "contract ERC721"
              }
            },
            "id": 2033,
            "nodeType": "InheritanceSpecifier",
            "src": "182:6:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2034,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 712,
              "src": "190:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$712",
                "typeString": "contract MinterRole"
              }
            },
            "id": 2035,
            "nodeType": "InheritanceSpecifier",
            "src": "190:10:12"
          }
        ],
        "contractDependencies": [
          712,
          844,
          854,
          1541,
          2158
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721Mintable\n@dev ERC721 minting logic",
        "fullyImplemented": true,
        "id": 2055,
        "linearizedBaseContracts": [
          2055,
          712,
          1541,
          2158,
          844,
          854
        ],
        "name": "ERC721Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2053,
              "nodeType": "Block",
              "src": "518:56:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2047,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "534:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2048,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2039,
                        "src": "538:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2046,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1353,
                      "src": "528:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "528:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2050,
                  "nodeType": "ExpressionStatement",
                  "src": "528:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "563:4:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2045,
                  "id": 2052,
                  "nodeType": "Return",
                  "src": "556:11:12"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param tokenId The token id to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2054,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2042,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2041,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 645,
                  "src": "492:10:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "492:10:12"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "456:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2039,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "468:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "455:29:12"
            },
            "returnParameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2044,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "512:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2043,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "511:6:12"
            },
            "scope": 2055,
            "src": "442:132:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2056,
        "src": "155:421:12"
      }
    ],
    "src": "0:577:12"
  },
  "legacyAST": {
    "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
    "exportedSymbols": {
      "ERC721Mintable": [
        2055
      ]
    },
    "id": 2056,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2029,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2030,
        "nodeType": "ImportDirective",
        "scope": 2056,
        "sourceUnit": 1542,
        "src": "25:22:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 2031,
        "nodeType": "ImportDirective",
        "scope": 2056,
        "sourceUnit": 713,
        "src": "48:43:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2032,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1541,
              "src": "182:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1541",
                "typeString": "contract ERC721"
              }
            },
            "id": 2033,
            "nodeType": "InheritanceSpecifier",
            "src": "182:6:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2034,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 712,
              "src": "190:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$712",
                "typeString": "contract MinterRole"
              }
            },
            "id": 2035,
            "nodeType": "InheritanceSpecifier",
            "src": "190:10:12"
          }
        ],
        "contractDependencies": [
          712,
          844,
          854,
          1541,
          2158
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721Mintable\n@dev ERC721 minting logic",
        "fullyImplemented": true,
        "id": 2055,
        "linearizedBaseContracts": [
          2055,
          712,
          1541,
          2158,
          844,
          854
        ],
        "name": "ERC721Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2053,
              "nodeType": "Block",
              "src": "518:56:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2047,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "534:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2048,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2039,
                        "src": "538:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2046,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1353,
                      "src": "528:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "528:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2050,
                  "nodeType": "ExpressionStatement",
                  "src": "528:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "563:4:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2045,
                  "id": 2052,
                  "nodeType": "Return",
                  "src": "556:11:12"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param tokenId The token id to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2054,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2042,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2041,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 645,
                  "src": "492:10:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "492:10:12"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "456:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2039,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "468:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "455:29:12"
            },
            "returnParameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2044,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "512:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2043,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "511:6:12"
            },
            "scope": 2055,
            "src": "442:132:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2056,
        "src": "155:421:12"
      }
    ],
    "src": "0:577:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-15T07:47:08.126Z",
  "devdoc": {
    "details": "ERC721 minting logic",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "ERC721Mintable"
  },
  "userdoc": {
    "methods": {}
  }
}